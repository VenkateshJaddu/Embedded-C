
#include <stdio.h>
#include <string.h>
#include "main_1.h"
#include "stm32f4xx_hal.h"

void UART_init(void);
void SystemClockConfig(void);
void error_handler(void);
uint8_t convert_upper_case(uint8_t data);

UART_HandleTypeDef huart;

char *data_transmit = "Send message\r\n";


int main()
{
	char data_received;
	char buffer[100];
	uint32_t count = 0;
	uint16_t data_len = strlen(data_transmit);
	HAL_Init();

	UART_init();

	SystemClockConfig();

	HAL_UART_Transmit(&huart, (uint8_t*)data_transmit, data_len, HAL_MAX_DELAY);

	while(1)
	{
		HAL_UART_Receive(&huart,(uint8_t*)&data_received, 1, HAL_MAX_DELAY);

		if(data_received == '\r')
		{
			break;
		}
		else
		{
			buffer[count++] = convert_upper_case(data_received);
		}
	}

	buffer[count++] = '\r';

	HAL_UART_Transmit(&huart,(uint8_t*)buffer, count, HAL_MAX_DELAY);

	while(1);

	return 0;
}

void SystemClockConfig(void)
{

}

void UART_init()
{
	huart.Instance = USART2;
	huart.Init.BaudRate = 115200;
	huart.Init.WordLength = UART_WORDLENGTH_8B;
	huart.Init.StopBits = UART_STOPBITS_1;
	huart.Init.Parity = UART_PARITY_NONE;
	huart.Init.Mode = UART_MODE_TX_RX;
	huart.Init.HwFlowCtl = UART_HWCONTROL_NONE;

	if((HAL_UART_Init(&huart)) != HAL_OK)
	{
		error_handler();
	}



}

uint8_t convert_upper_case(uint8_t data)
{
	if(data >= 'a' && data <= 'z')
	{
		data = data - ('a'-'A');
	}
	return data;
}

void error_handler(void)
{
	printf("UART_Init Failed\n");
	while(1);
}
