
#include "main_1.h"

void UART_init(void);
void SystemClockConfig(void);
void error_handler(void);
//void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);

UART_HandleTypeDef huart;

#define TRUE  1
#define FALSE 0
char *data_transmit = "Transmission Successful\r\n";
char data_received;
char data_bufer[100];
uint32_t count;
uint8_t reception_complete = FALSE;


int main()
{

	uint16_t data_len = strlen(data_transmit);
	HAL_Init();

	UART_init();

	SystemClockConfig();

	HAL_UART_Transmit(&huart, (uint8_t*)data_transmit, data_len, HAL_MAX_DELAY);

	while(reception_complete != TRUE)
	{
		HAL_UART_Receive_IT(&huart, &data_received, 1);

	}

	while(1);

	return 0;
}

void SystemClockConfig(void)
{

}

void UART_init()
{
	huart.Instance = USART2;
	huart.Init.BaudRate = 115200;
	huart.Init.WordLength = UART_WORDLENGTH_8B;
	huart.Init.StopBits = UART_STOPBITS_1;
	huart.Init.Parity = UART_PARITY_NONE;
	huart.Init.Mode = UART_MODE_TX_RX;
	huart.Init.HwFlowCtl = UART_HWCONTROL_NONE;

	if((HAL_UART_Init(&huart)) != HAL_OK)
	{
		error_handler();
	}
}

void HAL_UART_RxCpltCallback(&huart)
{
	if(data_received == '\r')
	{
		reception_complete = TRUE;
		data_buffer[count++] = '\r';
		HAL_UART_Transmit(&huart,data_buffer ,count, HAL_MAX_DELAY);
	}
	else
	{
		data_buffer[count++] = data_received;
	}
}

void error_handler(void)
{
	printf("UART_Init Failed\n");
	while(1);
}

